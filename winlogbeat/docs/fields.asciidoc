
////
This file is generated! See etc/fields.yml and scripts/generate_field_docs.py
////

[[exported-fields]]
== Exported Fields

This document describes the fields that are exported by Winlogbeat. They are
grouped in the following categories:

* <<exported-fields-common>>
* <<exported-fields-eventlog>>

[[exported-fields-common]]
=== Common Beat Fields

Contains common fields available in all event types.



==== beat.name

The name of the Beat sending the log messages. If the shipper name is set in the configuration file, then that value is used. If it is not set, the hostname is used.


==== beat.hostname

The hostname as returned by the operating system on which the Beat is running.


==== @timestamp

type: date

example: 2015-01-24 14:06:05.071000

format: YYYY-MM-DDTHH:MM:SS.milliZ

required: True

The timestamp when the event log record was generated.


==== type

required: True

The event log API type used to read the record. The possible values are "wineventlog" for the Windows Event Log API or "eventlogging" for the Event Logging API.
The Event Logging API was designed for Windows Server 2003, Windows XP, or Windows 2000 operating system. In Windows Vista, the event logging infrastructure was redesigned. On Windows Vista or later operating systems, Windows Event Log API is used. Winlogbeat automatically detects which API to use for reading event logs.


==== count

type: int

required: True

The number of event log records represented in the event. This field is always set to 1.


[[exported-fields-eventlog]]
=== Event Log Record Fields

Contains data from a Windows event log record.



==== computerName

type: string

required: True

The name of the computer that generated the record. When using Windows event forwarding, this name can differ from the `beat.hostname`.


==== category

type: string

required: False

The category for this event. The meaning of this value depends on the event source.


==== eventID

type: long

required: True

The event identifier. The value is specific to the source of the event.


==== eventLogName

type: string

required: True

The name of the event log from which this record was read. This value is one of the names from the `event_logs` collection in the configuration.


==== level

type: string

required: True

The level of the event. There are five levels of events that can be logged: Success, Information, Warning, Error, Audit Success, and Audit Failure.


==== message

type: string

required: False

The message from the event log record.


==== messageError

type: string

required: False

The error that occurred while reading and formatting the message from the log. This field is mutually exclusive with `message`.


==== messageInserts

type: list

required: False

The raw message data logged by an application. Normally this data is inserted into parameterized string to create `message`, but in case of an error Winlogbeat attempts to provide this raw data. This field is mutually exclusive with `message`.


==== recordNumber

type: string

required: True

The record number of the event log record. The first record written to an event log is record number 1, and other records are numbered sequentially. If the record number reaches 4294967295, the next record number will be 0.


==== sourceName

type: string

required: True

The source of the event log record (the application or service that logged the record).


==== user.name

type: string

required: False

The name of the user associated with this event.


==== user.domain

type: string

required: False

The domain that the user associated with this event is a member of.


==== user.type

type: string

required: False

The type of user account associated with this event.


